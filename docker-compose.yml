version: '3'

services:
  profilers:
    container_name: profilers
    build:
      context: profilers-service
      dockerfile: Dockerfile
    image: miprofiler/profilers:latest
    command: /root/miniconda2/bin/gunicorn -c gunicorn.conf.py wsgi:app
    volumes:
      - ./profilers-service:/var/www/
    networks:
      - profilers-network
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    networks:
      - profilers-network
  api:
    container_name: api
    build:
      context: backend
      dockerfile: Dockerfile
    image: miprofiler/api:latest
    # command: python app.py
    depends_on:
      - profilers
      - mongodb
    networks:
      - profilers-network
    volumes:
      - ./backend/src/:/app/
    environment:
      - PROFILERS_SERVICE_URL=http://profilers:5000/profile/
    command: gunicorn -c server.conf.py wsgi:app
    ports:
      - "8000:8000" 
  web:
    container_name: web
    build:
      context: frontend
      dockerfile: Dockerfile
    image: miprofiler/web:latest
    ports:
      - "3000:3000" 
    command: dockerize -wait tcp://profilers:5000 -timeout 300s npm run dev
    depends_on:
      - profilers
      - api
      - mongodb
    networks:
      - profilers-network
    environment:
      - API_HOST=api
    volumes:
      - type: bind
        source: ./frontend
        target: /usr/app
      - /usr/app/node_modules
networks:
  profilers-network:
    driver: bridge